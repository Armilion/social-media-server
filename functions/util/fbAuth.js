const {admin, db} = require("./admin");

exports.FBAuth = (request, response, next) => { // next : next handler
	let idToken;
	if(request.headers.authorization && request.headers.authorization.startsWith("Bearer ")){
		idToken = request.headers.authorization.split("Bearer ")[1];
	}else{
		console.log("Error : no token found");
		return response.status(403).json({error : "Unauthorized access"});
	}

	admin.auth().verifyIdToken(idToken) // Check that tokens was generated by our application and doesn't come from somewhere else
		.then(decodedToken => {
			request.user = decodedToken;
			return db.collection("users")
				.where("userId", "==", request.user.uid)
				.limit(1)
				.get(); // return an array of one element
		})
		.then(data => {
			request.user.handle = data.docs[0].data().handle; // get handle data of the first and only element of the array
			request.user.imageURL = data.docs[0].data().imageURL;
			return next();
		})
		.catch(err => {
			console.error("Error while verifying token", err);
			return response.status(403).json(err);
		})
}